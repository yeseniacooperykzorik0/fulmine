{
  "swagger": "2.0",
  "info": {
    "title": "ark_node/v1/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Service"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/address": {
      "get": {
        "summary": "GetAddress returns offchain address",
        "operationId": "Service_GetAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/balance": {
      "get": {
        "summary": "GetBalance returns ark balance",
        "operationId": "Service_GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/info": {
      "get": {
        "summary": "GetInfo returns info about the ark account",
        "operationId": "Service_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/onboard": {
      "post": {
        "summary": "GetOnboardAddress returns onchain address and invoice for requested amount",
        "operationId": "Service_GetOnboardAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOnboardAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOnboardAddressRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/round/{roundId}": {
      "get": {
        "summary": "Round returns round info for optional round_id",
        "operationId": "Service_GetRoundInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRoundInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/send": {
      "post": {
        "summary": "Send asks to send amount to ark address",
        "operationId": "Service_Send",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/send/onchain": {
      "post": {
        "summary": "SendOnchain asks to send requested amount to requested onchain address",
        "operationId": "Service_SendOnchain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendOnchainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendOnchainRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/send/onchain/fees": {
      "post": {
        "summary": "SendOnchain asks to send requested amount to requested onchain address",
        "operationId": "Service_GetSendOnchainFees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSendOnchainFeesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSendOnchainFeesRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/transactions": {
      "post": {
        "summary": "GetTransactions returns virtual transactions history",
        "operationId": "Service_GetTransactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTransactionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetTransactionsRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AccountInfo": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "derivationPath": {
          "type": "string"
        },
        "xpubs": {
          "type": "string"
        }
      }
    },
    "v1BuildInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "v1Fees": {
      "type": "object",
      "properties": {
        "boltz": {
          "type": "string",
          "format": "uint64"
        },
        "network": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "v1GetBalanceResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetInfoResponse": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/v1GetInfoResponseNetwork",
          "title": "the network of the wallet"
        },
        "account": {
          "$ref": "#/definitions/v1AccountInfo",
          "description": "list containing info about the wallet accounts."
        },
        "buildInfo": {
          "$ref": "#/definitions/v1BuildInfo",
          "description": "info about the current version of the ark wallet."
        }
      }
    },
    "v1GetInfoResponseNetwork": {
      "type": "string",
      "enum": [
        "NETWORK_UNSPECIFIED",
        "NETWORK_MAINNET",
        "NETWORK_TESTNET",
        "NETWORK_REGTEST"
      ],
      "default": "NETWORK_UNSPECIFIED"
    },
    "v1GetOnboardAddressRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetOnboardAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "v1GetRoundInfoResponse": {
      "type": "object",
      "properties": {
        "round": {
          "$ref": "#/definitions/v1Round"
        }
      }
    },
    "v1GetSendOnchainFeesRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetSendOnchainFeesResponse": {
      "type": "object",
      "properties": {
        "fees": {
          "$ref": "#/definitions/v1Fees"
        }
      }
    },
    "v1GetTransactionsRequest": {
      "type": "object"
    },
    "v1GetTransactionsResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TransactionInfo"
          }
        }
      }
    },
    "v1Node": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "tx": {
          "type": "string"
        },
        "parentTxid": {
          "type": "string"
        }
      }
    },
    "v1Round": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "roundTx": {
          "type": "string"
        },
        "congestionTree": {
          "$ref": "#/definitions/v1Tree"
        },
        "forfeitTxs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SendOnchainRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1SendOnchainResponse": {
      "type": "object",
      "properties": {
        "roundId": {
          "type": "string"
        }
      }
    },
    "v1SendRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1SendResponse": {
      "type": "object",
      "properties": {
        "roundId": {
          "type": "string"
        }
      }
    },
    "v1TransactionInfo": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "roundTxid": {
          "type": "string"
        }
      }
    },
    "v1Tree": {
      "type": "object",
      "properties": {
        "levels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TreeLevel"
          }
        }
      }
    },
    "v1TreeLevel": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Node"
          }
        }
      }
    }
  }
}
