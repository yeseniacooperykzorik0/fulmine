{
  "swagger": "2.0",
  "info": {
    "title": "fulmine/v1/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Service"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/address": {
      "get": {
        "summary": "GetAddress returns offchain address",
        "operationId": "Service_GetAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/balance": {
      "get": {
        "summary": "GetBalance returns ark balance",
        "operationId": "Service_GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/delegate/pubkey": {
      "get": {
        "summary": "GetDelegatePublicKey retrieves the Fulmine's public key to be included in VTXO scripts.",
        "operationId": "Service_GetDelegatePublicKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDelegatePublicKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/delegate/unwatch": {
      "post": {
        "summary": "UnwatchAddress unsubscribes an address from vtxo rollover",
        "operationId": "Service_UnwatchAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UnwatchAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UnwatchAddressRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/delegate/watch": {
      "post": {
        "summary": "WatchAddressForRollover watches an address for rollover",
        "operationId": "Service_WatchAddressForRollover",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WatchAddressForRolloverResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1WatchAddressForRolloverRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/delegate/watched": {
      "get": {
        "summary": "ListWatchedAddresses lists all watched addresses",
        "operationId": "Service_ListWatchedAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListWatchedAddressesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/info": {
      "get": {
        "summary": "GetInfo returns info about the ark account",
        "operationId": "Service_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/invoice": {
      "post": {
        "operationId": "Service_CreateInvoice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateInvoiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateInvoiceRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/invoice/pay": {
      "post": {
        "operationId": "Service_PayInvoice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PayInvoiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PayInvoiceRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/invoice/status": {
      "get": {
        "operationId": "Service_IsInvoiceSettled",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IsInvoiceSettledResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "invoice",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/note/redeem": {
      "post": {
        "summary": "Redeems an ark note by joining a round",
        "operationId": "Service_RedeemNote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RedeemNoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RedeemNoteRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/onboard": {
      "post": {
        "summary": "GetOnboardAddress returns onchain address and invoice for requested amount",
        "operationId": "Service_GetOnboardAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOnboardAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetOnboardAddressRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/round/{roundId}": {
      "get": {
        "summary": "Returns round info for optional round_id (no round_id returns current round info)",
        "operationId": "Service_GetRoundInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRoundInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/send/offchain": {
      "post": {
        "summary": "Send asks to send amount to ark address by joining a round",
        "operationId": "Service_SendOffChain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendOffChainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendOffChainRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/send/onchain": {
      "post": {
        "summary": "SendOnChain asks to send requested amount to requested onchain address",
        "operationId": "Service_SendOnChain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SendOnChainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendOnChainRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/settle": {
      "get": {
        "summary": "Settle vtxos and boarding utxos",
        "operationId": "Service_Settle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SettleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/transaction/sign": {
      "post": {
        "operationId": "Service_SignTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SignTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SignTransactionRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/transactions": {
      "get": {
        "summary": "GetTransactionHistory returns virtual transactions history",
        "operationId": "Service_GetTransactionHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTransactionHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/vhtlc": {
      "get": {
        "summary": "ListVHTLC = list all vhtlc OR filter by preimage_hash",
        "operationId": "Service_ListVHTLC",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListVHTLCResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "preimageHashFilter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Service"
        ]
      },
      "post": {
        "summary": "CreateVHTLCAddress computes a VHTLC address",
        "operationId": "Service_CreateVHTLC",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateVHTLCResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateVHTLCRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/v1/vhtlc/claim": {
      "post": {
        "summary": "ClaimVHTLC = self send vHTLC -\u003e VTXO",
        "operationId": "Service_ClaimVHTLC",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ClaimVHTLCResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ClaimVHTLCRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    }
  },
  "definitions": {
    "GetInfoResponseNetwork": {
      "type": "string",
      "enum": [
        "NETWORK_UNSPECIFIED",
        "NETWORK_MAINNET",
        "NETWORK_TESTNET",
        "NETWORK_REGTEST"
      ],
      "default": "NETWORK_UNSPECIFIED"
    },
    "RelativeLocktimeLocktimeType": {
      "type": "string",
      "enum": [
        "LOCKTIME_TYPE_UNSPECIFIED",
        "LOCKTIME_TYPE_BLOCK",
        "LOCKTIME_TYPE_SECOND"
      ],
      "default": "LOCKTIME_TYPE_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BuildInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "v1ClaimVHTLCRequest": {
      "type": "object",
      "properties": {
        "preimage": {
          "type": "string"
        }
      }
    },
    "v1ClaimVHTLCResponse": {
      "type": "object",
      "properties": {
        "redeemTxid": {
          "type": "string"
        }
      }
    },
    "v1CreateInvoiceRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "memo": {
          "type": "string"
        },
        "preimage": {
          "type": "string"
        }
      }
    },
    "v1CreateInvoiceResponse": {
      "type": "object",
      "properties": {
        "invoice": {
          "type": "string"
        },
        "preimageHash": {
          "type": "string"
        }
      }
    },
    "v1CreateVHTLCRequest": {
      "type": "object",
      "properties": {
        "preimageHash": {
          "type": "string"
        },
        "senderPubkey": {
          "type": "string"
        },
        "receiverPubkey": {
          "type": "string"
        },
        "refundLocktime": {
          "type": "integer",
          "format": "int64",
          "title": "Optional absolute locktime for refund condition (in blocks)"
        },
        "unilateralClaimDelay": {
          "$ref": "#/definitions/v1RelativeLocktime",
          "title": "Optional unilateral claim delay (relative timelock)"
        },
        "unilateralRefundDelay": {
          "$ref": "#/definitions/v1RelativeLocktime",
          "title": "Optional unilateral refund delay (relative timelock)"
        },
        "unilateralRefundWithoutReceiverDelay": {
          "$ref": "#/definitions/v1RelativeLocktime",
          "title": "Optional unilateral refund without receiver delay (relative timelock)"
        }
      }
    },
    "v1CreateVHTLCResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "claimPubkey": {
          "type": "string"
        },
        "refundPubkey": {
          "type": "string"
        },
        "serverPubkey": {
          "type": "string"
        },
        "swapTree": {
          "$ref": "#/definitions/v1TaprootTree"
        },
        "refundLocktime": {
          "type": "string",
          "format": "int64"
        },
        "unilateralClaimDelay": {
          "type": "string",
          "format": "int64"
        },
        "unilateralRefundDelay": {
          "type": "string",
          "format": "int64"
        },
        "unilateralRefundWithoutReceiverDelay": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1GetAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "pubkey": {
          "type": "string"
        }
      }
    },
    "v1GetBalanceResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetDelegatePublicKeyResponse": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "title": "The Fulmine's public key to be used for delegate operations, encoded in hex"
        }
      },
      "description": "Response containing the delegate public key."
    },
    "v1GetInfoResponse": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/GetInfoResponseNetwork",
          "description": "The bitcoin network on which Fulmine is runnig."
        },
        "addrPrefix": {
          "type": "string",
          "description": "The ark address prefix (ark | tark)."
        },
        "serverUrl": {
          "type": "string",
          "description": "The URL of the server to which Fulmine is connected to if already initialized."
        },
        "buildInfo": {
          "$ref": "#/definitions/v1BuildInfo",
          "description": "info about the current version of the ark wallet."
        }
      }
    },
    "v1GetOnboardAddressRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1GetOnboardAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "v1GetRoundInfoResponse": {
      "type": "object",
      "properties": {
        "round": {
          "$ref": "#/definitions/v1Round"
        }
      }
    },
    "v1GetTransactionHistoryResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TransactionInfo"
          }
        }
      }
    },
    "v1Input": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v1IsInvoiceSettledResponse": {
      "type": "object",
      "properties": {
        "settled": {
          "type": "boolean"
        }
      }
    },
    "v1ListVHTLCResponse": {
      "type": "object",
      "properties": {
        "vhtlcs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Vtxo"
          }
        }
      }
    },
    "v1ListWatchedAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1RolloverAddress"
          },
          "title": "List of all watched addresses"
        }
      }
    },
    "v1Node": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "tx": {
          "type": "string"
        },
        "parentTxid": {
          "type": "string"
        }
      }
    },
    "v1Output": {
      "type": "object",
      "properties": {
        "pubkey": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1PayInvoiceRequest": {
      "type": "object",
      "properties": {
        "invoice": {
          "type": "string"
        }
      }
    },
    "v1PayInvoiceResponse": {
      "type": "object",
      "properties": {
        "preimage": {
          "type": "string"
        }
      }
    },
    "v1RedeemNoteRequest": {
      "type": "object",
      "properties": {
        "note": {
          "type": "string"
        }
      }
    },
    "v1RedeemNoteResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        }
      }
    },
    "v1RelativeLocktime": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/RelativeLocktimeLocktimeType"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "RelativeLocktime represents a relative timelock"
    },
    "v1RolloverAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The watched address"
        },
        "taprootTree": {
          "$ref": "#/definitions/v1Tapscripts",
          "title": "Full taproot tree as list of hex tapscripts"
        },
        "destinationAddress": {
          "type": "string",
          "title": "Where funds will be rolled over to"
        }
      }
    },
    "v1Round": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "int64"
        },
        "end": {
          "type": "string",
          "format": "int64"
        },
        "roundTx": {
          "type": "string"
        },
        "congestionTree": {
          "$ref": "#/definitions/v1Tree"
        },
        "forfeitTxs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1SendOffChainRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1SendOffChainResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        }
      }
    },
    "v1SendOnChainRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1SendOnChainResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        }
      }
    },
    "v1SettleResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        }
      }
    },
    "v1SignTransactionRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "type": "string"
        }
      }
    },
    "v1SignTransactionResponse": {
      "type": "object",
      "properties": {
        "signedTx": {
          "type": "string"
        }
      }
    },
    "v1TaprootLeaf": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "output": {
          "type": "string"
        }
      }
    },
    "v1TaprootTree": {
      "type": "object",
      "properties": {
        "claimLeaf": {
          "$ref": "#/definitions/v1TaprootLeaf"
        },
        "refundLeaf": {
          "$ref": "#/definitions/v1TaprootLeaf"
        },
        "refundWithoutBoltzLeaf": {
          "$ref": "#/definitions/v1TaprootLeaf"
        },
        "unilateralClaimLeaf": {
          "$ref": "#/definitions/v1TaprootLeaf"
        },
        "unilateralRefundLeaf": {
          "$ref": "#/definitions/v1TaprootLeaf"
        },
        "unilateralRefundWithoutBoltzLeaf": {
          "$ref": "#/definitions/v1TaprootLeaf"
        }
      }
    },
    "v1Tapscripts": {
      "type": "object",
      "properties": {
        "scripts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1TransactionInfo": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "roundTxid": {
          "type": "string"
        },
        "redeemTxid": {
          "type": "string"
        },
        "boardingTxid": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1TxType"
        },
        "settled": {
          "type": "boolean"
        }
      }
    },
    "v1Tree": {
      "type": "object",
      "properties": {
        "levels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TreeLevel"
          }
        }
      }
    },
    "v1TreeLevel": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Node"
          }
        }
      }
    },
    "v1TxType": {
      "type": "string",
      "enum": [
        "TX_TYPE_UNSPECIFIED",
        "TX_TYPE_SENT",
        "TX_TYPE_RECEIVED"
      ],
      "default": "TX_TYPE_UNSPECIFIED"
    },
    "v1UnwatchAddressRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "The address to stop watching"
        }
      }
    },
    "v1UnwatchAddressResponse": {
      "type": "object"
    },
    "v1Vtxo": {
      "type": "object",
      "properties": {
        "outpoint": {
          "$ref": "#/definitions/v1Input"
        },
        "receiver": {
          "$ref": "#/definitions/v1Output"
        },
        "roundTxid": {
          "type": "string"
        },
        "spentBy": {
          "type": "string"
        },
        "expireAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1WatchAddressForRolloverRequest": {
      "type": "object",
      "properties": {
        "rolloverAddress": {
          "$ref": "#/definitions/v1RolloverAddress"
        }
      }
    },
    "v1WatchAddressForRolloverResponse": {
      "type": "object"
    }
  }
}
