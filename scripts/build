#!/bin/bash
set -e

# Get the parent directory path
PARENT_PATH=$(dirname $(
  cd $(dirname $0)
  pwd -P
))

# Version information handling
# Check if VERSION is already set (from Docker build args or GitHub Actions)
if [[ -z $VERSION ]]; then
  # Try to get version from git tags
  VERSION=$(git describe --tags --always 2>/dev/null || echo "")
fi

# Get commit hash if not already set
if [[ -z $COMMIT ]]; then
  COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
fi

# Get build date if not already set
if [[ -z $DATE ]]; then
  DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
fi

# Set GOOS and GOARCH if not already set
if [[ -z $GOOS ]]; then
  GOOS=$(go env GOOS)
fi
if [[ -z $GOARCH ]]; then
  GOARCH=$(go env GOARCH)
fi

echo "Building for $GOOS $GOARCH"
echo "Version: $VERSION"
echo "Commit: $COMMIT"
echo "Date: $DATE"

# Change to the parent directory
pushd $PARENT_PATH

# Create build directory if it doesn't exist
mkdir -p build

# Build the binary with version information
CGO_ENABLED=0 go build -ldflags="-X 'main.version=$VERSION' -X 'main.commit=$COMMIT' -X 'main.date=$DATE' -X 'main.sentryDsn=$SENTRY_DSN'" -o build/fulmine-$GOOS-$GOARCH cmd/fulmine/main.go

echo "Build successful for $GOOS $GOARCH: build/fulmine-$GOOS-$GOARCH"

# Return to the original directory
popd