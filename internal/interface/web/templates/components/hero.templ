package components

templ HeroHeader(arkAddress string) {
	<div class="flex justify-between mb-10">
	  <div class="flex gap-2 items-center">
	    @LogoWhiteSmall()
			@LogoNameSmall()
		</div>
	  <div class="flex gap-4 text-white/60">
	    <div class="rounded-lg bg-white/10 py-1 px-2 flex items-center gap-4">
			  <p class="overflow-hidden text-ellipsis w-16 md:w-32" id="arkAddress">{arkAddress}</p>
				@CopyWidget(arkAddress)
			</div>
	    <a href="/settings/general">@SettingsButton()</a>
	  </div>
	</div>
}

templ HeroBalance(currentBalance string) {
	<div class="mb-10">
	  <p class="text-gray-300">Balance</p>
	  <p class="text-4xl font-medium my-2 cryptoAmount" sats={currentBalance}>{currentBalance} SATS</p>
		<p class="text-gray-200 font-lg fiatAmount" sats={currentBalance}>&nbsp;</p>
	</div>
}

templ Actions(online, connected bool, currentBalance string) {
	if online {
	  <div class="grid grid-cols-3 gap-4 md:flex md:flex-row">
	    <button
			  class="bg-white text-black px-2 md:px-4 md:w-auto"
				hx-on:click="redirect('/send')"
				if currentBalance == "0" {
					disabled
				}
			>
	  	  @SendIcon() Send
	  	</button>
	    <button class="bg-white text-black px-2 md:px-4 md:w-auto" hx-on:click="redirect('/receive')">
	  	  @ReceiveIcon() Receive
	  	</button>
			<button
			  class="bg-white text-black px-2 md:px-4 md:w-auto"
				hx-on:click="redirect('/swap')"
				if !connected {
					disabled
				}
			>
				@SwapIcon() Swap
			</button>
	  </div>
	} else {
		<p>Server is offline</p>
	}
}

templ Hero(arkAddress, currentBalance string, online, connected bool) {
  <div class="bg-radial-gradient rounded-b-lg md:rounded-t-lg p-3 mb-10">
	  @HeroHeader(arkAddress)
	  @HeroBalance(currentBalance)
	  @Actions(online, connected, currentBalance)
	</div>
}