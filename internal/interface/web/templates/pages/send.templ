package pages

import (
	"github.com/ArkLabsHQ/ark-node/internal/interface/web/templates/components"
)

templ ChevronDownIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white/50" viewBox="0 0 20 20">
    <path fill="currentColor" d="M10.103 12.778L16.81 6.08a.69.69 0 0 1 .99.012a.726.726 0 0 1-.012 1.012l-7.203 7.193a.69.69 0 0 1-.985-.006L2.205 6.72a.727.727 0 0 1 0-1.01a.69.69 0 0 1 .99 0l6.908 7.068Z"/>
  </svg>
}

templ PasteIconXL() {
	<svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" viewBox="0 0 24 24">
    <path fill="currentColor" d="M5.962 2.513a.75.75 0 0 1-.475.949l-.816.272a.25.25 0 0 0-.171.237V21.25c0 .138.112.25.25.25h14.5a.25.25 0 0 0 .25-.25V3.97a.25.25 0 0 0-.17-.236l-.817-.272a.75.75 0 0 1 .474-1.424l.816.273A1.751 1.751 0 0 1 21 3.97v17.28A1.75 1.75 0 0 1 19.25 23H4.75A1.75 1.75 0 0 1 3 21.25V3.97a1.75 1.75 0 0 1 1.197-1.66l.816-.272a.75.75 0 0 1 .949.475Z"/>
    <path fill="currentColor" d="M7 1.75C7 .784 7.784 0 8.75 0h6.5C16.216 0 17 .784 17 1.75v1.5A1.75 1.75 0 0 1 15.25 5h-6.5A1.75 1.75 0 0 1 7 3.25Zm1.75-.25a.25.25 0 0 0-.25.25v1.5c0 .138.112.25.25.25h6.5a.25.25 0 0 0 .25-.25v-1.5a.25.25 0 0 0-.25-.25Z"/>
  </svg>
}

templ SendPreviewIcon() {
	<div class="flex items-center w-16 h-16 bg-white/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-white" viewBox="0 0 24 24">
      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="2">
        <path stroke-miterlimit="10" d="M17.657 6.343L6.343 17.657"/>
        <path stroke-linejoin="round" d="M18.101 16.733V7.437A1.53 1.53 0 0 0 16.563 5.9H7.267"/>
      </g>
    </svg>
	</div>
}

templ SuccessIcon() {
	<div class="flex items-center w-16 h-16 bg-green/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-green" viewBox="0 0 376 384">
      <path fill="currentColor" d="M119 282L346 55l29 30l-256 256L0 222l30-30z"/>
    </svg>
	</div>
}

templ SendBodyContent(currentBalance string) {
	@components.DesktopHeader()
	<div id="sendBody">
	  <form hx-post="/send/preview" hx-target="#sendBody" hx-swap="outerHTML">
	    <div class="p-3 flex flex-col justify-between rounded-md h-screen md:h-auto md:bg-desktopbg">
	      <div>
	        @components.Header("Send")
	        <p class="font-semibold mb-2">Recipient's address</p>
	    	  <div class="bg-graybg p-4 flex items-center justify-between rounded-lg">
	    	    <input class="bg-graybg border-0" id="sendAddress" name="address" placeholder="ark1ccc..." />
	    	  	<p class="cursor-pointer text-white/50" onclick="pasteAddressFromClipboard()">@PasteIconXL()</p>
	    	  </div>
	    	  <p class="font-semibold mb-2 mt-10">Amount</p>
	    	  <div class="bg-graybg p-4 flex items-center justify-between rounded-lg">
					  <input class="hidden" id="sendSats" name="sats" />
	    	    <input
						  class="bg-graybg border-0"
							id="sendAmount"
							max={currentBalance}
							onchange="updateSats()"
							placeholder="5000" />
	    	  	<div class="flex items-center gap-4">
	    			  <p class="py-1 px-2 bg-white/20 text-white/50 rounded-lg cursor-pointer" onclick="setMaxValue()">MAX</p>
	    	  	  <p class="py-1 w-10" id="unit">SATS</p>
	    	  	  <p class="cursor-pointer" onclick="toggleUnit()">@ChevronDownIcon()</p>
	    			</div>
	    	  </div>
	    	  <p class="text-right text-sm" id="available">Available <span class="sats">{currentBalance}</span> SATS</p>
	    	</div>
	    	<div class="md:flex flex-row-reverse justify-start gap-4 mt-16">
	    	  <button class="bg-orange md:w-auto mb-2" type="submit">Preview send</button>
	    	  <button class="bg-graybg md:w-auto" onclick="redirect('/')">Cancel</button>
	    	</div>
	    </div>
	  </form>
	</div>
	<script>
	  const pasteAddressFromClipboard = () => {
			if (navigator.clipboard) {
        navigator.clipboard.readText().then((addr) => {
					document.querySelector('#sendAddress').value = addr
					const asAmount = addr.match(/amount:(\d+)/)
					if (asAmount) {
						const sats = asAmount[1]
						const unit = document.querySelector('#unit').innerText
						document.querySelector('#sendAmount').value = unit === 'SATS' ? sats : fromSatoshis(sats)
						document.querySelector('#sendSats').value = sats
					}
			  })
      }
		}
		
		const setMaxValue = () => {
			const sats = document.querySelector('#sendAmount').getAttribute('max')
			if (isNaN(sats)) return
			const unit = document.querySelector('#unit').innerText
			document.querySelector('#sendAmount').value = unit === 'SATS' ? sats : fromSatoshis(sats)
			document.querySelector('#sendSats').value = sats
		}

		const toggleUnit = () => {
			const currUnit = document.querySelector('#unit').innerText
			const nextUnit = currUnit === 'SATS' ? 'BTC' : 'SATS'
			// change unit
			document.querySelector('#unit').innerText = nextUnit
			// change availability
			const maxSats = document.querySelector('#sendAmount').getAttribute('max')
			document.querySelector('#available').innerText =
			  `Available ${nextUnit === 'SATS' ? prettyNum(maxSats) : fromSatoshis(maxSats)} ${nextUnit}`
			// change value inside input
			const currVal = document.querySelector('#sendAmount').value
			if (currVal) {
				const nextVal = nextUnit === 'SATS' ? toSatoshis(currVal) : fromSatoshis(currVal)
				document.querySelector('#sendAmount').value = nextVal
			}
		}

		const updateSats = () => {
			const unit = document.querySelector('#unit').innerText
			const amount = document.querySelector('#sendAmount').value
      document.querySelector('#sendSats').value = unit === 'SATS' ? amount : toSatoshis(amount)
		}
	</script>
}

templ SendPreviewContent(address, amount string) {
	<div id="sendBody">
	  <form hx-post="/send/confirm" hx-target="#sendBody" hx-target="outerHTML">
		  <input type="hidden" name="address" value={address}>
		  <input type="hidden" name="amount" value={amount}>
	    <div class="p-3 flex flex-col justify-between rounded-md h-screen md:h-auto md:bg-desktopbg">
	      <div class="flex flex-col items-center">
	        @components.Header("Confirm Send")
	        @SendPreviewIcon()
					<p class="mt-8">Send</p>
					<p class="mt-8 text-3xl">
					  <span class="sats">{amount}</span>
						<span class="text-white/50">SATS</span>
					</p>
					<div class="flex mt-8 w-64 gap-2">
					  <p class="text-white/50">to</p>
						<p class="overflow-hidden text-ellipsis whitespace-nowrap">{address}</p>
						<p class="text-white/50">@CopyIcon()</p>
					</div>
					<div class="bg-white/10 p-4 w-full mt-8 rounded-lg">
            @TxLine("network fee", "500")
            <div class="flex justify-between mb-2">
              <div class="flex items-center gap-2 text-white/50">
                <p>ARK FEE</p>
                <p hx-get="/modal/info" hx-target="#modal">@components.InfoIcon()</p>
              </div>
              <p>0.5%</p>
            </div>
            @TxLine("est. time", "~10 min.")
            <hr class="text-white/50 mb-2" />
            <div class="flex justify-between mb-2">
              <p class="text-white/50">TOTAL</p>
              <p><span class="sats">{amount}</span> SATS</p>
            </div>
          </div>
	    	</div>
	    	<div class="md:flex flex-row-reverse justify-start gap-4 mt-16">
	    	  <button class="bg-orange md:w-auto mb-2" type="submit">Confirm</button>
	    	  <button class="bg-graybg md:w-auto" onclick="redirect('/')">Cancel</button>
	    	</div>
	    </div>
	  </form>
	</div>
}

templ SendSuccessContent(address, amount string) {
	<div class="p-3 flex flex-col justify-between rounded-md h-screen md:h-auto md:bg-desktopbg">
	  @components.Header("Sent")
	  <div class="flex flex-col items-center">
	    @SuccessIcon()
			<p class="mt-8">Sent successfully</p>
			<p class="mt-8 text-3xl">
			  <span class="sats">{amount}</span>
				<span class="text-white/50">SATS</span>
			</p>
			<div class="flex mt-8 w-64 gap-2">
			  <p class="text-white/50">to</p>
				<p class="overflow-hidden text-ellipsis whitespace-nowrap">{address}</p>
				<p class="text-white/50">@CopyIcon()</p>
			</div>
		</div>
		<div class="md:flex flex-row-reverse justify-start gap-4 mt-16">
	    <button class="bg-graybg md:w-auto" onclick="window.open('https://mempool.space', '_blank')">View transaction</button>
		</div>
	</div>
}