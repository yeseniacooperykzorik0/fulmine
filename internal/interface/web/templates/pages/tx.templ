package pages

import (
	"github.com/ArkLabsHQ/ark-wallet/internal/interface/web/templates/components"
)

func TxIcon(kind, status string) templ.Component {
	switch status {
    case "failure":
        return FailureTxIcon()
    case "pending":
        return PendingTxIcon()
    case "waiting":
        return WaitingTxIcon()
  }
	switch kind {
    case "recv":
        return RecvTxIcon()
    case "send":
        return SentTxIcon()
    case "swap":
        return SwapTxIcon()
    default:
        return SwapTxIcon()
  }
}

templ FailureTxIcon() {
	<div class="flex items-center w-16 h-16 bg-red/10 rounded-full mr-2">
    <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-red" viewBox="0 0 24 24">
      <path fill="currentColor" d="M18.36 19.78L12 13.41l-6.36 6.37l-1.42-1.42L10.59 12L4.22 5.64l1.42-1.42L12 10.59l6.36-6.36l1.41 1.41L13.41 12l6.36 6.36z"/>
    </svg>
  </div>
}

templ PendingTxIcon() {
	<div class="flex items-center w-16 h-16 bg-yellowbg/10 rounded-full mr-2">
    <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-yellow" viewBox="0 0 2048 2048">
      <path fill="currentColor" d="M1536 0v128H384V0h1152zm45 979l-90 90l-467-470v1449H896V599l-467 470l-90-90l621-626l621 626z"/>
    </svg>
  </div>
}

templ SentTxIcon() {
	<div class="flex items-center w-16 h-16 bg-redbg/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-red" viewBox="0 0 24 24">
      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="2">
        <path stroke-miterlimit="10" d="M17.657 6.343L6.343 17.657"/>
        <path stroke-linejoin="round" d="M18.101 16.733V7.437A1.53 1.53 0 0 0 16.563 5.9H7.267"/>
      </g>
    </svg>
	</div>
}

templ SwapTxIcon() {
	<div class="flex items-center w-16 h-16 bg-white/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-white" viewBox="0 0 21 21">
      <g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2">
        <path d="M13 8h5V3"/>
        <path d="M18 8c-2.837-3.333-5.67-5-8.5-5S4.17 4 2 6m4.5 5.5h-5v5"/>
        <path d="M1.5 11.5c2.837 3.333 5.67 5 8.5 5s5.33-1 7.5-3"/>
      </g>
    </svg>
	</div>
}

templ RecvTxIcon() {
	<div class="flex items-center w-16 h-16 bg-greenbg/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-green" viewBox="0 0 24 24">
      <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="2">
        <path stroke-miterlimit="10" d="M6.343 17.657L17.657 6.343"/>
        <path stroke-linejoin="round" d="M5.899 7.267v9.296A1.53 1.53 0 0 0 7.437 18.1h9.296"/>
      </g>
    </svg>
	</div>
}

templ WaitingTxIcon() {
	<div class="flex items-center w-16 h-16 bg-yellowbg/10 rounded-full mr-2">
	  <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 mx-auto text-yellow" viewBox="0 0 24 24">
      <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 3v3m6.366-.366l-2.12 2.12M21 12h-3m.366 6.366l-2.12-2.12M12 21v-3m-6.366.366l2.12-2.12M3 12h3m-.366-6.366l2.12 2.12"/>
    </svg>
	</div>
}

templ TxLine(left, right string) {
  <div class="flex justify-between mb-2">
    <p class="text-white/50 uppercase">{left}</p>
    <p>{right}</p>
  </div>
}

templ TxBodyContent(txid, kind, status, date, hour, sats string) {
  @components.DesktopHeader()
	<div class="p-3 flex flex-col justify-between rounded-md h-screen md:h-auto md:bg-desktopbg">
	  @components.Header("Transaction details")
    <div class="flex flex-col items-center">
      @TxIcon(kind, status)
      <p class="mt-4 capitalize">{kind}</p>
      <p class="mt-4 text-3xl">
        <span class="sats">{sats}</span>
        <span class="text-white/50">SATS</span>
      </p>
    </div>
    <div class="bg-white/10 p-4 mt-10 rounded-lg">
      @TxLine("date", date + " " + hour)
      <div class="flex justify-between mb-2">
        <p class="text-white/50">STATUS</p>
        if status == "success" {
          <p class="text-green">Succeeded</p>
        } else if status == "failure" {
          <p class="text-red">Failed</p>
        } else if status == "pending" {
          <p class="text-yellow">Pending for claim</p>
        } else if status == "waiting" {
          <p class="text-yellow">Waiting</p>
        } else {
          <p>Unknown</p>
        }
      </div>
      @TxLine("network", "Ark")
      @TxLine("network fee", "500")
      <div class="flex justify-between mb-2">
        <div class="flex items-center gap-2 text-white/50">
          <p>ARK FEE</p>
          <p hx-get="/modal/info" hx-target="#modal">@components.InfoIcon()</p>
        </div>
        <p>0.5%</p>
      </div>
      <hr class="text-white/50 mb-2" />
      <div class="flex justify-between mb-2">
        <p class="text-white/50">TOTAL</p>
        <p><span class="sats">{sats}</span> SATS</p>
      </div>
    </div>
	</div>
}
